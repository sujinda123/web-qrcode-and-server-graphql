
input SearchList {
  ASSET_CODE: String
}

# ---------------------------------------------------------------------------- Select
type Query {
  # me: User!
  # login(userUsername: String!, userPwd: String!): AuthData
  getUser(username: String): User
  getSearch(input: SearchList, page: Int, limit: Int): [Asset!]!
  uploadedFiles : [File]
  # users: [User]
  # allUsers: [User]
  # assets: [Asset]!
  # statusasset(id: ID!): StatusAsset
  # statusassets: [StatusAsset]!
  
  # product(id: ID!): Product
  # products: [Product]!
}
# the schema allows the following query:

# ---------------------------------------------------------------------------- Create
type Mutation {
  signup(
    USER_USERNAME: String!, 
    USER_FIRSTNAME: String!, 
    USER_LASTNAME: String!, 
    USER_PASSWORD: String!
  ): AuthData
  login(Username: String!, Password: String!): AuthData
  # createStatusAsset(statusAssetName: String!): StatusAsset!
  createAsset(
    assetCode: String! # รหัสครุภัณฑ์
    assetName: String! # ชื่อครุภัณฑ์
    assetNumber: Int!
    assetUnitCost: String!
    assetBrand: String!
    assetModel: String!
    assetSerialNumber: String!
  ): Asset!
  
  singleUploadLocal(file: Upload!) : File
  multipleUploadLocal(files: [Upload]!) : [File]
  # singleUploadS3(file : Upload!) : File
  # multipleUploadS3(files : [Upload]!) : [File]
}

type File {
  success: String!
  message: String!
  mimetype: String
  encoding: String
  filename: String
  location: String
}

# type Subscription {
#   newProductUser: Product
# }

scalar Date

type User {
  USER_ID: Int!
  USER_USERNAME: String!
  USER_PASSWORD: String!
  USER_FIRSTNAME: String!
  USER_LASTNAME: String!
  USER_PRIVILEGE: [Privilege]
  ASSET_PRIVILEGE: [Status_Asset]
  # updateBy: String!
  # createdBy: String!
  USER_ASSETS: [Asset]
  # statusassets: [StatusAsset]
  UPDATE_DATE: Date!
  CREATE_DATE: Date!
}
# สิทธิ์การเข้าถึง
type Privilege {
  PRIVILEGE_ID: ID!
  PRIVILEGE_NAME: String!
  # UPDATE_BY: User!
  # CREATE_BY: User!
  UPDATE_DATE: Date!
  CREATE_DATE: Date!
}

# สถานะสินทรัพย์
type Status_Asset {
  STATUS_ID: Int!
  STATUS_NAME: String!
  # asset: Asset!
  # updateBy: User!
  # createdBy: User!
  CREATE_DATE: Date!
  UPDATE_DATE: Date!
}

# สาขา
type Department {
  id: ID!
  departmentName: String!
  updateBy: User!
  createdBy: User!
  updateAt: Date!
  createdAt: Date!
}

# สถานที่
type Location {
  id: ID!
  locationName: String!
  updateBy: User!
  createdBy: User!
  updateAt: Date!
  createdAt: Date!
}

# ห้อง
type Room {
  ROOM_ID: Int!
  ROOM_NAME: String! # ชื่อห้อง
  # roomLocation: Location! # ชื่อตึก
  # updateBy: User!
  # createdBy: User!
  CREATE_DATE: Date!
  UPDATE_DATE: Date!
}

# ครุภัณฑ์
type Asset {
  ASSET_ID: Int!
  ASSET_CODE: String! # รหัสครุภัณฑ์
  ASSET_NAME: String! # ชื่อครุภัณฑ์
  ASSET_NUMBER: Int! # จำนวน
  ASSET_PRICE: Float
  # assetUnitCost: String! # หน่วยนับ
  ASSET_BRAND: String! # ยี่ห้อ
  ASSET_MODEL: String! # รุ่น/โมเดล
  ASSET_SERIALNUMBER: String! # หมายเลขเครื่อง/S/N
  ASSET_IMAGES: [Asset_Images]
  ASSET_STATUS: [Status_Asset]
  ASSET_ROOM: [Room]
  ASSET_ORIGINAL_ROOM: [Room]
  CREATED_BY: [User]
  UPDATE_BY: [User]
  CREATE_DATE: Date!
  UPDATE_DATE: Date!
}

type Asset_Images {
  IMAGE_ID: Int!
  IMAGE_NAME: String! # ชื่อรูปภาพ
  ASSET_ID: Int!
  # updateBy: User! 
  # createdBy: User!
  updateAt: Date!
  createdAt: Date!
}

# ข้อมูลรับรองความถูกต้อง
type AuthData {
  # userId: ID
  token: String
}

type return {
  text: String
}